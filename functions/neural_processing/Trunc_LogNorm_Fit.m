function [paramEsts, negloglik, converged] = Trunc_LogNorm_Fit(x,K)

truncVar = 0;


% k means initialization.
[cInd, C] = kmeans(x, K, 'EmptyAction','singleton');
[Y,I] = sort(C);

for S = 1:length(I)
    sigmalist(S) = std(log(x(cInd==I(S))));
    mulist(S) = mean(log(x(cInd==I(S))));
end

% initial parameters for mixture fit. means and standard deviations
% from kmeans.
if K == 1
    start = [Y', std(log(x(cInd==I(1))))];
elseif K > 1
    start = [ones(1,K-1)*1/K, mulist, sigmalist]; % probabilities, means, stds
end

%% defining the type of distribution to fit

% normal distribution truncated on left and right side
xTrunc = [0 0.5];
switch truncVar
    case 0
        pdf_truncnorm = @(x,mu,sigma) lognpdf(x,mu,sigma);
    case 1
        pdf_truncnorm = @(x,mu,sigma) normpdf(x,mu,sigma) ./ ...
            (1-normcdf(xTrunc(1),mu,sigma));
    case 2
        pdf_truncnorm = @(x,mu,sigma) lognpdf(x,log(mu),sigma) ./ ...
            (logncdf(xTrunc(2),log(mu),sigma)-logncdf(xTrunc(1),log(mu),sigma));
end

if K == 1
    % mixture of 1 truncated normals
    pdf_normmixture = @(x,mu1,sigma1) ...
        pdf_truncnorm(x,mu1,sigma1);
    
elseif K == 2
    % mixture of 2 truncated normals
    pdf_normmixture = @(x,p,mu1,mu2,sigma1,sigma2) ...
        p*pdf_truncnorm(x,mu1,sigma1) + ...
        (1-p)*pdf_truncnorm(x,mu2,sigma2);
    
elseif K == 3
    % mixture of 3 truncated normals
    pdf_normmixture = @(x,p1,p2,mu1,mu2,mu3,sigma1,sigma2,sigma3) ...
        p1*pdf_truncnorm(x,mu1,sigma1) + ...
        p2*pdf_truncnorm(x,mu2,sigma2) + ...
        (1-(p1+p2))*pdf_truncnorm(x,mu3,sigma3);
    
elseif K == 4
    % mixture of 3 truncated normals
    pdf_normmixture = @(x,p1,p2,p3,mu1,mu2,mu3,mu4,sigma1,sigma2,sigma3,sigma4) ...
        p1*pdf_truncnorm(x,mu1,sigma1) + ...
        p2*pdf_truncnorm(x,mu2,sigma2) + ...
        p3*pdf_truncnorm(x,mu3,sigma3) + ...
        (1-(p1+p2+p3))*pdf_truncnorm(x,mu4,sigma4);
    
elseif K == 5
    % mixture of 5 truncated normals
    pdf_normmixture = @(x,p1,p2,p3,p4,mu1,mu2,mu3,mu4,mu5,sigma1,sigma2,sigma3,sigma4,sigma5) ...
        p1*pdf_truncnorm(x,mu1,sigma1) + ...
        p2*pdf_truncnorm(x,mu2,sigma2) + ...
        p3*pdf_truncnorm(x,mu3,sigma3) + ...
        p4*pdf_truncnorm(x,mu4,sigma4) + ...
        (1-(p1+p2+p3+p4))*pdf_truncnorm(x,mu5,sigma5);
    
elseif K == 6
    % mixture of 6 truncated normals
    pdf_normmixture = @(x,p1,p2,p3,p4,p5,...
        mu1,mu2,mu3,mu4,mu5,mu6,...
        sigma1,sigma2,sigma3,sigma4,sigma5,sigma6) ...
        p1*pdf_truncnorm(x,mu1,sigma1) + ...
        p2*pdf_truncnorm(x,mu2,sigma2) + ...
        p3*pdf_truncnorm(x,mu3,sigma3) + ...
        p4*pdf_truncnorm(x,mu4,sigma4) + ...
        p5*pdf_truncnorm(x,mu5,sigma5) + ...
        (1-(p1+p2+p3+p4+p5))*pdf_truncnorm(x,mu6,sigma6);
    
elseif K == 7
    % mixture of 7 truncated normals
     pdf_normmixture = @(x,p1,p2,p3,p4,p5,p6,...
        mu1,mu2,mu3,mu4,mu5,mu6,mu7,...
        sigma1,sigma2,sigma3,sigma4,sigma5,sigma6,sigma7) ...
        p1*pdf_truncnorm(x,mu1,sigma1) + ...
        p2*pdf_truncnorm(x,mu2,sigma2) + ...
        p3*pdf_truncnorm(x,mu3,sigma3) + ...
        p4*pdf_truncnorm(x,mu4,sigma4) + ...
        p5*pdf_truncnorm(x,mu5,sigma5) + ...
        p6*pdf_truncnorm(x,mu6,sigma6) + ...
        (1-(p1+p2+p3+p4+p5+p6))*pdf_truncnorm(x,mu7,sigma7);
    
elseif K == 8
    % mixture of 8 truncated normals, 7+8+8 (23) parameters
     pdf_normmixture = @(x,p1,p2,p3,p4,p5,p6,p7,...
        mu1,mu2,mu3,mu4,mu5,mu6,mu7,mu8,...
        sigma1,sigma2,sigma3,sigma4,sigma5,sigma6,sigma7,sigma8) ...
        p1*pdf_truncnorm(x,mu1,sigma1) + ...
        p2*pdf_truncnorm(x,mu2,sigma2) + ...
        p3*pdf_truncnorm(x,mu3,sigma3) + ...
        p4*pdf_truncnorm(x,mu4,sigma4) + ...
        p5*pdf_truncnorm(x,mu5,sigma5) + ...
        p6*pdf_truncnorm(x,mu6,sigma6) + ...
        p7*pdf_truncnorm(x,mu7,sigma7) + ...
        (1-(p1+p2+p3+p4+p5+p6+p7))*pdf_truncnorm(x,mu8,sigma8);
end

%% maximum likelihood estimation
% lb = zeros(size(start));
lb = [zeros(1,K-1) log(0)*ones(1,(length(start)-(K-1))/2) -1000*ones(1,(length(start)-(K-1))/2)];

ub = [ones(1,K-1) log(.5)*ones(1,(length(start)-(K-1))/2) 1000*ones(1,(length(start)-(K-1))/2)];

% options = statset('MaxIter',10000, 'MaxFunEvals',50000);
options = statset('MaxIter',8000, 'MaxFunEvals',8000);

paramEsts = zeros(1,30);
negloglik = 0;
converged = 0;

try
    disp('Fitting Now')
    temp = mle(x, 'pdf',pdf_normmixture, 'start',start, 'lower',lb,'upper',ub,'options',options);
    [~, msgidlast] = lastwarn;
    if strcmp(msgidlast,'stats:mle:EvalLimit') || strcmp(msgidlast,'stats:mle:IterLimit')
        converged = 0;
    else
        converged = 1;
    end
    lastwarn('')
    paramEsts = [temp zeros(1,30-length(temp))];
catch
    disp('Fitting Failed')
%     paramEsts = start;
%     negloglik = nan;
%     converged = nan;
    return
end


if K == 1
    negloglik = -sum(log(pdf_normmixture(x,paramEsts(1),paramEsts(2))));
elseif K == 2
    negloglik = -sum(log(pdf_normmixture(x,paramEsts(1),paramEsts(2),paramEsts(3),paramEsts(4),paramEsts(5))));
elseif K == 3
    negloglik = -sum(log(pdf_normmixture(x,paramEsts(1),paramEsts(2),paramEsts(3),paramEsts(4),paramEsts(5),paramEsts(6),paramEsts(7),paramEsts(8))));
elseif K == 4
    negloglik = -sum(log(pdf_normmixture(x,paramEsts(1),paramEsts(2),paramEsts(3),...
        paramEsts(4),paramEsts(5),paramEsts(6),paramEsts(7),paramEsts(8),...
        paramEsts(9),paramEsts(10),paramEsts(11))));
elseif K == 5
     negloglik = -sum(log(pdf_normmixture(x,paramEsts(1),paramEsts(2),paramEsts(3),...
        paramEsts(4),paramEsts(5),paramEsts(6),paramEsts(7),paramEsts(8),...
        paramEsts(9),paramEsts(10),paramEsts(11), ...
        paramEsts(12),paramEsts(13),paramEsts(14))));
elseif K == 6
     negloglik = -sum(log(pdf_normmixture(x,paramEsts(1),paramEsts(2),paramEsts(3),...
        paramEsts(4),paramEsts(5),paramEsts(6),paramEsts(7),paramEsts(8),...
        paramEsts(9),paramEsts(10),paramEsts(11), ...
        paramEsts(12),paramEsts(13),paramEsts(14), ...
        paramEsts(15),paramEsts(16),paramEsts(17))));
elseif K == 7
     negloglik = -sum(log(pdf_normmixture(x,paramEsts(1),paramEsts(2),paramEsts(3),...
        paramEsts(4),paramEsts(5),paramEsts(6),paramEsts(7),paramEsts(8),...
        paramEsts(9),paramEsts(10),paramEsts(11), ...
        paramEsts(12),paramEsts(13),paramEsts(14), ...
        paramEsts(15),paramEsts(16),paramEsts(17), ...
        paramEsts(18),paramEsts(19),paramEsts(20))));
elseif K == 8
    negloglik = -sum(log(pdf_normmixture(x,paramEsts(1),paramEsts(2),paramEsts(3),...
        paramEsts(4),paramEsts(5),paramEsts(6),paramEsts(7),paramEsts(8),...
        paramEsts(9),paramEsts(10),paramEsts(11), ...
        paramEsts(12),paramEsts(13),paramEsts(14), ...
        paramEsts(15),paramEsts(16),paramEsts(17), ...
        paramEsts(18),paramEsts(19),paramEsts(20), ...
        paramEsts(21),paramEsts(22),paramEsts(23))));
end

